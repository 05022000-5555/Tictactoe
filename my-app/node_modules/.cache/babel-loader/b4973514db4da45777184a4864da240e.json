{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJS\\\\my-app\\\\src\\\\Components\\\\tictactoe\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport { caculatewinner } from '../../hepper';\nimport Board from './Board';\nimport \"./GameStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true\n};\n\nconst gameReducer = (state, action) => {\n  return state;\n};\n\nconst Game = () => {\n  _s();\n\n  // const [board, setBoard] = useState(Array(9).fill(null))\n  // const [xIsNext, setXIsNext] = useState(true)\n  const [state, dispatch] = useReducer(gameReducer, initialState); // const [state , setState] = useState({\n  //     xIsNext: true,\n  //     board: Array(9).fill(null),\n  // })\n\n  const winner = caculatewinner(state.board);\n\n  const handleClick = index => {\n    const boardCopy = [...state.board];\n    if (winner || boardCopy[index]) return;\n    boardCopy[index] = state.xIsNext ? \"X\" : \"O\"; // setState({\n    //     board: boardCopy,\n    //     xIsNext: !state.xIsNext\n    // }\n    // )\n    // setBoard(boardCopy)\n    // setXIsNext(!setXIsNext.xIsNext)\n  };\n\n  const handleReset = () => {// setState({\n    //     board: Array(9).fill(null),\n    //     xIsNext: !state.xIsNext\n    // })\n    // setBoard(Array(9).fill(null))\n    // setXIsNext(true)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: winner ? `Winner is ${winner || \"\"}` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","useState","caculatewinner","Board","initialState","board","Array","fill","xIsNext","gameReducer","state","action","Game","dispatch","winner","handleClick","index","boardCopy","handleReset"],"sources":["F:/ReactJS/my-app/src/Components/tictactoe/Game.js"],"sourcesContent":["import React, { useReducer, useState } from 'react';\r\nimport { caculatewinner } from '../../hepper';\r\nimport Board from './Board';\r\nimport \"./GameStyle.css\"\r\nconst initialState = {\r\n    board: Array(9).fill(null),\r\n    xIsNext: true\r\n}\r\nconst gameReducer = (state, action) =>{\r\n    return state\r\n}\r\nconst Game = () => {\r\n    // const [board, setBoard] = useState(Array(9).fill(null))\r\n    // const [xIsNext, setXIsNext] = useState(true)\r\n    const [state, dispatch] = useReducer(gameReducer,initialState);\r\n    // const [state , setState] = useState({\r\n    //     xIsNext: true,\r\n    //     board: Array(9).fill(null),\r\n    // })\r\n    const winner = caculatewinner(state.board);\r\n    const handleClick = (index)=>{\r\n        const boardCopy = [...state.board]\r\n        if(winner || boardCopy[index]) return\r\n        boardCopy[index] = state.xIsNext ? \"X\" : \"O\";\r\n        // setState({\r\n        //     board: boardCopy,\r\n        //     xIsNext: !state.xIsNext\r\n        // }\r\n        // )\r\n        // setBoard(boardCopy)\r\n        // setXIsNext(!setXIsNext.xIsNext)\r\n    }\r\n    const handleReset = ()=>{\r\n        // setState({\r\n        //     board: Array(9).fill(null),\r\n        //     xIsNext: !state.xIsNext\r\n        // })\r\n        // setBoard(Array(9).fill(null))\r\n        // setXIsNext(true)\r\n    }\r\n    return (\r\n        <div>\r\n            <Board cells={state.board} onClick={handleClick}></Board>\r\n            <button onClick={handleReset}>Reset game</button>\r\n            <div>{winner ? `Winner is ${winner || \"\"}` : \"\"}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default Game;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,iBAAP;;AACA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADU;EAEjBC,OAAO,EAAE;AAFQ,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;EAClC,OAAOD,KAAP;AACH,CAFD;;AAGA,MAAME,IAAI,GAAG,MAAM;EAAA;;EACf;EACA;EACA,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBb,UAAU,CAACS,WAAD,EAAaL,YAAb,CAApC,CAHe,CAIf;EACA;EACA;EACA;;EACA,MAAMU,MAAM,GAAGZ,cAAc,CAACQ,KAAK,CAACL,KAAP,CAA7B;;EACA,MAAMU,WAAW,GAAIC,KAAD,IAAS;IACzB,MAAMC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACL,KAAV,CAAlB;IACA,IAAGS,MAAM,IAAIG,SAAS,CAACD,KAAD,CAAtB,EAA+B;IAC/BC,SAAS,CAACD,KAAD,CAAT,GAAmBN,KAAK,CAACF,OAAN,GAAgB,GAAhB,GAAsB,GAAzC,CAHyB,CAIzB;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CAXD;;EAYA,MAAMU,WAAW,GAAG,MAAI,CACpB;IACA;IACA;IACA;IACA;IACA;EACH,CAPD;;EAQA,oBACI;IAAA,wBACI,QAAC,KAAD;MAAO,KAAK,EAAER,KAAK,CAACL,KAApB;MAA2B,OAAO,EAAEU;IAApC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEG,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAMJ,MAAM,GAAI,aAAYA,MAAM,IAAI,EAAG,EAA7B,GAAiC;IAA7C;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CApCD;;GAAMF,I;;KAAAA,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}