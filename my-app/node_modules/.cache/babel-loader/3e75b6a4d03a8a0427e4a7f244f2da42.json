{"ast":null,"code":"import _slicedToArray from\"F:/ReactJS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";export function caculatewinner(cells){var line=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var index=0;index<line.length;index++){var _line$index=_slicedToArray(line[index],3),a=_line$index[0],b=_line$index[1],c=_line$index[2];if(cells[a]&&cells[a]===cells[b]&&cells[a]===cells[c]){return cells[a];}}return null;}","map":{"version":3,"names":["caculatewinner","cells","line","index","length","a","b","c"],"sources":["F:/ReactJS/my-app/src/hepper.js"],"sourcesContent":["export function caculatewinner(cells){\r\n    const line = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ]\r\n    for (let index = 0; index < line.length; index++) {\r\n        const [a,b,c] = line[index];\r\n        if(cells[a] && cells[a] === cells[b] && cells[a]===cells[c]){\r\n            return cells[a]\r\n        }  \r\n    }\r\n    return null\r\n}"],"mappings":"uGAAA,MAAO,SAASA,eAAT,CAAwBC,KAAxB,CAA8B,CACjC,GAAMC,KAAI,CAAG,CACT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CADS,CAET,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAFS,CAGT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAHS,CAIT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAJS,CAKT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CALS,CAMT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CANS,CAOT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAPS,CAQT,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CARS,CAAb,CAUA,IAAK,GAAIC,MAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGD,IAAI,CAACE,MAAjC,CAAyCD,KAAK,EAA9C,CAAkD,CAC9C,+BAAgBD,IAAI,CAACC,KAAD,CAApB,IAAOE,CAAP,gBAASC,CAAT,gBAAWC,CAAX,gBACA,GAAGN,KAAK,CAACI,CAAD,CAAL,EAAYJ,KAAK,CAACI,CAAD,CAAL,GAAaJ,KAAK,CAACK,CAAD,CAA9B,EAAqCL,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACM,CAAD,CAAxD,CAA4D,CACxD,MAAON,MAAK,CAACI,CAAD,CAAZ,CACH,CACJ,CACD,MAAO,KAAP,CACH"},"metadata":{},"sourceType":"module"}